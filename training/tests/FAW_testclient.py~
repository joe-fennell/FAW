"""
Fall Armyworm Project - University of Manchester
Author: George Worrall

FAW_testclient.py

Test client to test FAW_server.py

"""

import socket
import threading
import glob
import pathlib

HOST = 'localhost'
PORT = 7777
# Client to Server communication codes
START = b'STRT'  # Beginning of message
GPS = b'GPSC'  # GPS delimiter (coords in form Lat, Long (decimal degrees))
LONG = b'LONG'  # Longitude delimiter
SOF = b'SOFT'  # Start of image file
END_MESSAGE = b'ENDM'
# Server to Client communication codes
DWLD_FAIL = b'FAIL'
DWLD_SUCC = b'SUCC'
INVALID = b'IVLD'
TRUE = b'TRUE'  # <-- Classification True, as in Fall Armyworm identified.
FALSE = b'FALS'
OBJECT_MISSING = b'MISS'
WORM_MISSING = b'NONE'
MULTIPLE_WORMS = b'MANY'
TOO_BLURRY = b'BLUR'

PROJ_DIR = str(pathlib.Path(__file__).absolute().parents[1])

# TODO: write full test cases with worms images in test folder to use in each
# of the test cases

# TODO: investigate train/114827 and validation/133615 blocking

print("FAW_testclient.py testing FAW_server.py.")


def message_test_case(message_list, expected_results):
    """Test that socket messages are handled correctly."""

    print("\nTesting message sequence: {}".format(message_list))

    for message in message_list:
        sock.send(message)

    for expected in expected_results:
        response = sock.recv(4)  # standard length of each message
        if response != expected:
            raise RuntimeError("Expected {}, received {}.".format(
                expected, response))

    print("\n\tPassed.")
            




def image_test_case(img_path, expected_results):
    """Test that images are handled correctly."""

    name = pathlib.Path(img_path).name

    print("\nTesting image handling of {}".format(name)_

    with open(img_path, 'rb') as f:
        img_bytes = f.read()

    sock.send(START)
    sock.send(GPS)
    sock.send(b'51.5138')
    sock.send(LONG)
    sock.send(b'-0.09847899999999754')
    sock.send(SOF)
    sock.send(img_bytes)
    sock.send(END_MESSAGE)

    for expected in expected_results:
          pass
    response = sock.recv(4)

img_files = glob.glob(PROJ_DIR + '/worms/**/*.jpg')

sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
sock.connect((HOST, PORT))


